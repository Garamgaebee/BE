name: CI/CD using github actions & docker

on:
  push:
    branches: ["develop", "72-construct-cicd-process"]

  permissions:
    contents: read

  jobs:
    CI-CD:
      runs-on: ubuntu-latest
      step:

        - uses: actions/checkout@v3
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'

        # gradle caching - 빌드 시간 향상
        - name: Gradle Caching
          uses: actions/cache@v3
          with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner.os }}-gradle-

        # submodule checkout
        - name: Checkout
          uses: actions/checkout@v1
          with:
            token: ${{ secrets.ACTION_TOKEN }}
            submodules: true

        # gradle build
        - name: Build with Gradle
          run: ./gradlew clean build

        # docker build & push to develop
        - name: Docker build & push to dev
          if: contains(github.ref, '72-construct-cicd-process')
          run: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            cd ./eureka-server
            docker build --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/eureka --platform linux/amd64 .
            docker push ${{ secrets.DOCKER_USERNAME }}/eureka
  
            cd ./api-gateway
            docker build --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/gateway --platform linux/amd64 .
            docker push ${{ secrets.DOCKER_USERNAME }}/gateway
  
            cd ./auth-service/auth-container
            docker build --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/authservice --platform linux/amd64 .
            docker push ${{ secrets.DOCKER_USERNAME }}/authservice
  
            cd ./image-service/image-container
            docker build --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/imageservice --platform linux/amd64 .
            docker push ${{ secrets.DOCKER_USERNAME }}/imageservice
  
            cd ./member-service/member-container
            docker build --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/memberservice --platform linux/amd64 .
            docker push ${{ secrets.DOCKER_USERNAME }}/memberservice
  
  
            cd ./team-service/team-container
            docker build --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/teamservice --platform linux/amd64 .
            docker push ${{ secrets.DOCKER_USERNAME }}/teamservice
  
            cd ./thread-service/thread-container
            docker build --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/threadservice --platform linux/amd64 .
            docker push ${{ secrets.DOCKER_USERNAME }}/threadservice

        ## deploy to develop
        - name: Deploy to dev
          uses: appleboy/ssh-action@master
          id: deploy-dev
          if: contains(github.ref, '72-construct-cicd-process')
          with:
            host: ${{ secrets.HOST_DEV }} # EC2 퍼블릭 IPv4 DNS
            username: ${{ secrets.USERNAME }} # ubuntu
            password:
            port: 22
            key: ${{ secrets.PRIVATE_KEY }}
            script: |
              sudo docker ps
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/eureka
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/gateway
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/authservice
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/imageservice
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/memberservice
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/teamservice
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/threadservice
              sudo docker pull redis
              sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 9000:9000 ${{ secrets.DOCKER_USERNAME }}/eureka > eureka.out 2>&1 &
              sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/gateway > gateway.out 2>&1 &
              sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 8081:8081 ${{ secrets.DOCKER_USERNAME }}/authservice > authservice.out 2>&1 &
              sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 9001:9001 ${{ secrets.DOCKER_USERNAME }}/imageservice > imageservice.out 2>&1 &
              sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 8082:8082 ${{ secrets.DOCKER_USERNAME }}/memberservice > memberservice.out 2>&1 &
              sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 8083:8083 ${{ secrets.DOCKER_USERNAME }}/teamservice > teamservice.out 2>&1 &
              sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 8084:8084 ${{ secrets.DOCKER_USERNAME }}/threadservice > threadservice.out 2>&1 &
              sudo nohup docker run -p 6379:6379 redis > redis.out 2>&1 &
              sudo docker image prune -f